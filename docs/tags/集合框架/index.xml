<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>集合框架 on Endless River</title>
    <link>https://wangy325.github.io/endlessriver/tags/%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/</link>
    <description>Recent content in 集合框架 on Endless River</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 24 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wangy325.github.io/endlessriver/tags/%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HashMap的源码分析（一）</title>
      <link>https://wangy325.github.io/endlessriver/post/tech/basic_java/hashmap%E7%9A%84%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B8%80/</link>
      <pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wangy325.github.io/endlessriver/post/tech/basic_java/hashmap%E7%9A%84%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B8%80/</guid>
      <description>&lt;p&gt;本文内容简单分析了JDK8中HashMap源码的几个重要方法，便于理解散列表在Java集合框架中的具体应用。&lt;/p&gt;

&lt;p&gt;HashMap基于散列表，散列表中每一个Node节点（桶）是链表数组，当两个条目（entry）的key的hash值对桶数（capacity）取模的值相等时，这两个entry会存储在同一个链表数组中。但当链表数组中元素达到一定数目时，链表数组结构会转变为&lt;strong&gt;树结构&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Collections—Java集合框架系列之五</title>
      <link>https://wangy325.github.io/endlessriver/post/tech/basic_java/collections/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wangy325.github.io/endlessriver/post/tech/basic_java/collections/</guid>
      <description>&lt;p&gt;集合框架中一个重要的类，其实是Collection接口的&lt;strong&gt;伴随类&lt;/strong&gt;，其中定义了许多实用方法，用来获取&lt;strong&gt;集合视图&lt;/strong&gt;，或提供一些方便的操作集合元素的&lt;strong&gt;算法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;由于视图是直接封装的Collection接口，&lt;strong&gt;因此其方法有些局限&lt;/strong&gt;，并且由于特殊的设计，部分操作是不允许的（会抛出 &lt;em&gt;UnsupportedOperationExceptin&lt;/em&gt; ）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Map—Java集合框架系列之四</title>
      <link>https://wangy325.github.io/endlessriver/post/tech/basic_java/map/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wangy325.github.io/endlessriver/post/tech/basic_java/map/</guid>
      <description>&lt;p&gt;Map即映射，即键-值对，键不允许重复，并且一个键最多映射一个值&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Set—Java集合框架系列之三</title>
      <link>https://wangy325.github.io/endlessriver/post/tech/basic_java/set/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wangy325.github.io/endlessriver/post/tech/basic_java/set/</guid>
      <description>&lt;p&gt;Set是&lt;strong&gt;不含重复元素的集&lt;/strong&gt;，严格来讲，Set不允许当&lt;code&gt;e1.equals(e2)&lt;/code&gt;为真时， &lt;em&gt;e1&lt;/em&gt; 和 &lt;em&gt;e2&lt;/em&gt; 同时出现在集合中。Set最多允许一个&lt;code&gt;null&lt;/code&gt;元素&lt;/p&gt;

&lt;p&gt;将&lt;strong&gt;可变对象&lt;/strong&gt;置入Set时需要特别小心，当对象的改动影响到了元素之间的&lt;code&gt;equals()&lt;/code&gt;比较的结果，那么Set的行为就变得不确定了。因此，&lt;strong&gt;不能将Set本身作为Set的元素&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Queue—Java集合框架系列之二</title>
      <link>https://wangy325.github.io/endlessriver/post/tech/basic_java/queue/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wangy325.github.io/endlessriver/post/tech/basic_java/queue/</guid>
      <description>&lt;p&gt;Queue（队列），实际开发过程中，在单线程环境下使用的情况下不多，Queue作为集合框架中重要组成似乎习惯性被忽略，队列总是先持有元素，再处理元素&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>List—Java集合框架系列之一</title>
      <link>https://wangy325.github.io/endlessriver/post/tech/basic_java/list/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wangy325.github.io/endlessriver/post/tech/basic_java/list/</guid>
      <description>&lt;p&gt;接下来的集合框架系列文章讲解了常见的集合框架实现，此系列涉及到的实现都是&lt;strong&gt;线程不安全&lt;/strong&gt;的&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>