<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on Endless River</title>
    <link>https://wangy325.top/tags/redis/</link>
    <description>Recent content in redis on Endless River</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 24 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wangy325.top/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>redis必知必会(转)</title>
      <link>https://wangy325.top/post/tech/redis-all/</link>
      <pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wangy325.top/post/tech/redis-all/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://github.com/Snailclimb/JavaGuide/blob/master/docs/database/Redis/redis-all.md&#34;&gt;https://github.com/Snailclimb/JavaGuide/blob/master/docs/database/Redis/redis-all.md&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;此文总结了redis相关的基础性知识体系，但不包括redis主从、哨兵、集群相关内容&lt;/p&gt;

&lt;h3 id=&#34;1-简单介绍一下-redis-呗&#34;&gt;1. 简单介绍一下 Redis 呗!&lt;/h3&gt;

&lt;p&gt;简单来说 &lt;strong&gt;Redis 就是一个使用 C 语言开发的数据库&lt;/strong&gt;，不过与传统数据库不同的是 &lt;strong&gt;Redis 的数据是存在内存中的&lt;/strong&gt; ，也就是它是内存数据库，所以读写速度非常快，因此 Redis 被广泛应用于缓存方向。&lt;/p&gt;

&lt;p&gt;另外，&lt;strong&gt;Redis 除了做缓存之外，Redis 也经常用来做分布式锁，甚至是消息队列。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redis 提供了多种数据类型来支持不同的业务场景。Redis 还支持事务 、持久化、Lua 脚本、多种集群方案。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-分布式缓存常见的技术选型方案有哪些&#34;&gt;2. 分布式缓存常见的技术选型方案有哪些？&lt;/h3&gt;

&lt;p&gt;分布式缓存的话，使用的比较多的主要是 &lt;strong&gt;Memcached&lt;/strong&gt; 和 &lt;strong&gt;Redis&lt;/strong&gt;。不过，现在基本没有看过还有项目使用 &lt;strong&gt;Memcached&lt;/strong&gt; 来做缓存，都是直接用 &lt;strong&gt;Redis&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;Memcached 是分布式缓存最开始兴起的那会，比较常用的。后来，随着 Redis 的发展，大家慢慢都转而使用更加强大的 Redis 了。&lt;/p&gt;

&lt;p&gt;分布式缓存主要解决的是单机缓存的容量受服务器限制并且无法保存通用的信息。因为，本地缓存只在当前服务里有效，比如如果你部署了两个相同的服务，他们两者之间的缓存数据是无法共同的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis Sentinel高可用实现</title>
      <link>https://wangy325.top/post/tech/java/build-redis-sentinel/</link>
      <pubDate>Wed, 14 Aug 2019 16:01:23 +0800</pubDate>
      
      <guid>https://wangy325.top/post/tech/java/build-redis-sentinel/</guid>
      <description>&lt;p&gt;Redis &lt;a href=&#34;https://raw.githubusercontent.com/antirez/redis/2.8/00-RELEASENOTES&#34;&gt;v2.8&lt;/a&gt; 之后提供了高可用实现&lt;code&gt;Redis Sentinel&lt;/code&gt;，实现了&lt;strong&gt;主从复制&lt;/strong&gt;以及&lt;del&gt;被动&lt;/del&gt;&lt;strong&gt;主备切换&lt;/strong&gt;。&lt;a href=&#34;https://raw.githubusercontent.com/antirez/redis/3.0/00-RELEASENOTES&#34;&gt;v3.0&lt;/a&gt; 之后提供了分布式实现&lt;code&gt;Redis Cluster&lt;/code&gt;。本文讨论的是使用Sentinel搭建Redis高可用服务。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If all redis and sentinel instances were deployed in same host, you just build a fake redis-sentinel &lt;em&gt;High-Availability&lt;/em&gt; environment&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:v1&#34;&gt;&lt;a href=&#34;#fn:v1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;1-准备&#34;&gt;1 准备&lt;/h1&gt;

&lt;h2 id=&#34;1-1-linux主机&#34;&gt;1.1 linux主机&lt;/h2&gt;

&lt;p&gt;本文使用centOS7，需安装gcc：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;yum install gcc
&lt;span class=&#34;c1&#34;&gt;# or on ubuntu&lt;/span&gt;
apt-get install gcc&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>